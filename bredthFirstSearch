import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
class Node{
        int value;
        Node left;
        Node right;

        public Node (int value){
            this.value=value;
        }
    }
    // private Node root;
    // public void populate(Scanner sc){
    //     System.out.println("enter the value");
    //     int value=sc.nextInt();
    //     root=new Node(value);
    //     populate(sc,root);

    // }
public class BFS {
    public List<List<Integer>> levelorder(Node root){
        List <List<Integer>>result=new LinkedList<>();
        if(root==null){
            return result;
        }
        Queue <Node>queue=new LinkedList<>();
        queue.offer(root);
        while (!queue.isEmpty()) {
            int levelSize=queue.size();
            List<Integer>currentLevel=new ArrayList<>(levelSize);
            for(int i=0;i<levelSize;i++){
                Node currentNode=queue.poll();
                currentLevel.add(currentNode.value);
                if(currentNode.left!=null){
                    queue.offer(currentNode.left);
                }
                if(currentNode.right!=null){
                    queue.offer(currentNode.right);
                }
            }
            result.add(currentLevel);
        }
        return result;
    }
}
